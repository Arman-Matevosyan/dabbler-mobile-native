require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '15.1'
prepare_react_native_project!

target 'dabbler' do  
  config = use_native_modules!
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-maps-generated', :path => rn_maps_path
  pod 'react-native-maps', :path => rn_maps_path
  pod 'GoogleMaps', '~> 7.0'
  pod 'Google-Maps-iOS-Utils', '~> 4.0'

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
      # :ccache_enabled => true
    )

    # Fix for Google Maps
    installer.pods_project.targets.each do |target|
      if target.name == 'GoogleMaps'
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.1'
        end
      end
    end

    specific_files = [
      "#{Pod::Config.instance.installation_root}/Pods/Google-Maps-iOS-Utils/Sources/GoogleMapsUtilsObjC/include/GMSMarker+GMUClusteritem.h",
      "#{Pod::Config.instance.installation_root}/Pods/Google-Maps-iOS-Utils/Sources/GoogleMapsUtilsObjC/include/GMUGeoJSONParser.h",
      "#{Pod::Config.instance.installation_root}/Pods/Google-Maps-iOS-Utils/Sources/GoogleMapsUtilsObjC/include/GMUPolygon.h",
      "#{Pod::Config.instance.installation_root}/Pods/Google-Maps-iOS-Utils/Sources/GoogleMapsUtilsObjC/include/GMUWeightedLatLng.h",
      "#{Pod::Config.instance.installation_root}/Pods/GoogleMaps/Maps/Sources/GMSEmpty.h"
    ]

    specific_files.each do |file|
      if File.exist?(file)
        text = File.read(file)
        if text.include?("@import GoogleMaps;")
          new_text = text.gsub("@import GoogleMaps;", "#import <GoogleMaps/GoogleMaps.h>")
          File.open(file, "w") { |f| f.write(new_text) }
          puts "üîß Patched @import in: #{file}"
        else
          puts "‚ÑπÔ∏è No @import GoogleMaps; found in: #{file}"
        end
      else
        puts "‚ö†Ô∏è File not found: #{file}"
      end
    end
  end
end
